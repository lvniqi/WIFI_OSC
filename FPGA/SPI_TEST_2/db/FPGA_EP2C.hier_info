|main
SYS_CLK => SYS_CLK.IN2
AD5320_SCLK <= DAC_POLLING:comb_5.sclk
AD5320_SDATA <= DAC_POLLING:comb_5.dout
AD5320_SYNCn <= DAC_POLLING:comb_5.sync_n
GPIO_8 <= <GND>
GPIO_9 <= <GND>
HC4051_POS[0] <= DAC_POLLING:comb_5.pos[0]
HC4051_POS[1] <= DAC_POLLING:comb_5.pos[1]
HC4051_POS[2] <= DAC_POLLING:comb_5.pos[2]


|main|PLL:comb_3
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|main|PLL:comb_3|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|main|Div:comb_4
clk_in => cnt[0].CLK
clk_in => cnt[1].CLK
clk_in => cnt[2].CLK
clk_in => cnt[3].CLK
clk_in => cnt[4].CLK
clk_in => cnt[5].CLK
clk_in => cnt[6].CLK
clk_in => cnt[7].CLK
clk_in => cnt[8].CLK
clk_in => clk_div~reg0.CLK
clk_div <= clk_div~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|DAC_POLLING:comb_5
en => always1.IN1
data_in[0][0] => ~NO_FANOUT~
data_in[0][1] => ~NO_FANOUT~
data_in[0][2] => ~NO_FANOUT~
data_in[0][3] => ~NO_FANOUT~
data_in[0][4] => ~NO_FANOUT~
data_in[0][5] => ~NO_FANOUT~
data_in[0][6] => ~NO_FANOUT~
data_in[0][7] => ~NO_FANOUT~
data_in[0][8] => ~NO_FANOUT~
data_in[0][9] => ~NO_FANOUT~
data_in[0][10] => ~NO_FANOUT~
data_in[0][11] => ~NO_FANOUT~
data_in[1][0] => ~NO_FANOUT~
data_in[1][1] => ~NO_FANOUT~
data_in[1][2] => ~NO_FANOUT~
data_in[1][3] => ~NO_FANOUT~
data_in[1][4] => ~NO_FANOUT~
data_in[1][5] => ~NO_FANOUT~
data_in[1][6] => ~NO_FANOUT~
data_in[1][7] => ~NO_FANOUT~
data_in[1][8] => ~NO_FANOUT~
data_in[1][9] => ~NO_FANOUT~
data_in[1][10] => ~NO_FANOUT~
data_in[1][11] => ~NO_FANOUT~
data_in[2][0] => ~NO_FANOUT~
data_in[2][1] => ~NO_FANOUT~
data_in[2][2] => ~NO_FANOUT~
data_in[2][3] => ~NO_FANOUT~
data_in[2][4] => ~NO_FANOUT~
data_in[2][5] => ~NO_FANOUT~
data_in[2][6] => ~NO_FANOUT~
data_in[2][7] => ~NO_FANOUT~
data_in[2][8] => ~NO_FANOUT~
data_in[2][9] => ~NO_FANOUT~
data_in[2][10] => ~NO_FANOUT~
data_in[2][11] => ~NO_FANOUT~
clk_core => clk_core.IN1
rst_n => rst_n.IN1
sclk <= SPI_OUT:comb_5.sclk
dout <= SPI_OUT:comb_5.dout
sync_n <= SPI_OUT:comb_5.sync_n
pos[0] <= pos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pos[1] <= pos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pos[2] <= pos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|DAC_POLLING:comb_5|TEST_DAC_DATA:comb_3
pos[0] => Decoder0.IN2
pos[0] => data[8].DATAIN
pos[1] => Decoder0.IN1
pos[1] => data[9].DATAIN
pos[2] => Decoder0.IN0
data[0] <= <GND>
data[1] <= <GND>
data[2] <= <GND>
data[3] <= <GND>
data[4] <= <GND>
data[5] <= <GND>
data[6] <= <GND>
data[7] <= <GND>
data[8] <= pos[0].DB_MAX_OUTPUT_PORT_TYPE
data[9] <= pos[1].DB_MAX_OUTPUT_PORT_TYPE
data[10] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[11] <= <GND>


|main|DAC_POLLING:comb_5|Div:comb_4
clk_in => cnt[0].CLK
clk_in => cnt[1].CLK
clk_in => cnt[2].CLK
clk_in => cnt[3].CLK
clk_in => cnt[4].CLK
clk_in => cnt[5].CLK
clk_in => cnt[6].CLK
clk_in => cnt[7].CLK
clk_in => cnt[8].CLK
clk_in => clk_div~reg0.CLK
clk_div <= clk_div~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|DAC_POLLING:comb_5|SPI_OUT:comb_5
clk => dout~reg0.CLK
clk => sync_n~reg0.CLK
clk => sclk~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => data_in_save[0].CLK
clk => data_in_save[1].CLK
clk => data_in_save[2].CLK
clk => data_in_save[3].CLK
clk => data_in_save[4].CLK
clk => data_in_save[5].CLK
clk => data_in_save[6].CLK
clk => data_in_save[7].CLK
clk => data_in_save[8].CLK
clk => data_in_save[9].CLK
clk => data_in_save[10].CLK
clk => data_in_save[11].CLK
clk => data_in_save[12].CLK
clk => data_in_save[13].CLK
clk => data_in_save[14].CLK
clk => data_in_save[15].CLK
clk => current_state~1.DATAIN
data_in[0] => data_in_save.DATAB
data_in[1] => data_in_save.DATAB
data_in[2] => data_in_save.DATAB
data_in[3] => data_in_save.DATAB
data_in[4] => data_in_save.DATAB
data_in[5] => data_in_save.DATAB
data_in[6] => data_in_save.DATAB
data_in[7] => data_in_save.DATAB
data_in[8] => data_in_save.DATAB
data_in[9] => data_in_save.DATAB
data_in[10] => data_in_save.DATAB
data_in[11] => data_in_save.DATAB
data_in[12] => data_in_save.DATAB
data_in[13] => data_in_save.DATAB
data_in[14] => data_in_save.DATAB
data_in[15] => data_in_save.DATAB
rst_n => next_state.IDLE.OUTPUTSELECT
rst_n => next_state.SEND.OUTPUTSELECT
rst_n => next_state.SEND_n.OUTPUTSELECT
rst_n => next_state.END.OUTPUTSELECT
rst_n => current_state~3.DATAIN
rst_n => dout~reg0.ENA
rst_n => data_in_save[15].ENA
rst_n => data_in_save[14].ENA
rst_n => data_in_save[13].ENA
rst_n => data_in_save[12].ENA
rst_n => data_in_save[11].ENA
rst_n => data_in_save[10].ENA
rst_n => data_in_save[9].ENA
rst_n => data_in_save[8].ENA
rst_n => data_in_save[7].ENA
rst_n => data_in_save[6].ENA
rst_n => data_in_save[5].ENA
rst_n => data_in_save[4].ENA
rst_n => data_in_save[3].ENA
rst_n => data_in_save[2].ENA
rst_n => data_in_save[1].ENA
rst_n => data_in_save[0].ENA
rst_n => counter[4].ENA
rst_n => counter[3].ENA
rst_n => counter[2].ENA
rst_n => counter[1].ENA
rst_n => counter[0].ENA
rst_n => sclk~reg0.ENA
rst_n => sync_n~reg0.ENA
en => Selector2.IN3
en => Selector0.IN1
sclk <= sclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout <= dout~reg0.DB_MAX_OUTPUT_PORT_TYPE
sync_n <= sync_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
isIDLE <= isIDLE.DB_MAX_OUTPUT_PORT_TYPE
isEND <= isEND.DB_MAX_OUTPUT_PORT_TYPE


