|next_five
T <= new_all:inst.T
CLK => shift_registerv2:inst2.clk
CLK => new_all:inst.CLK
RESET => shift_registerv2:inst2.reset
RESET => new_all:inst.RESET
R => new_all:inst.R
dd <= shift_register:inst1.done
T6 <= shift_registerv2:inst2.done
T7 <= shift_registerv2:inst2.done_test
O[0] <= shift_register:inst1.data_out[0]
O[1] <= shift_register:inst1.data_out[1]
O[2] <= shift_register:inst1.data_out[2]
O[3] <= shift_register:inst1.data_out[3]
O[4] <= shift_register:inst1.data_out[4]
O[5] <= shift_register:inst1.data_out[5]
O[6] <= shift_register:inst1.data_out[6]
O[7] <= shift_register:inst1.data_out[7]
O[8] <= shift_register:inst1.data_out[8]
O[9] <= shift_register:inst1.data_out[9]
O[10] <= shift_register:inst1.data_out[10]
O[11] <= shift_register:inst1.data_out[11]
O[12] <= shift_register:inst1.data_out[12]
O[13] <= shift_register:inst1.data_out[13]
O[14] <= shift_register:inst1.data_out[14]
O[15] <= shift_register:inst1.data_out[15]
O[16] <= shift_register:inst1.data_out[16]
O[17] <= shift_register:inst1.data_out[17]
O[18] <= shift_register:inst1.data_out[18]
O[19] <= shift_register:inst1.data_out[19]
O[20] <= shift_register:inst1.data_out[20]
O[21] <= shift_register:inst1.data_out[21]
O[22] <= shift_register:inst1.data_out[22]
O[23] <= shift_register:inst1.data_out[23]
O[24] <= shift_register:inst1.data_out[24]
O[25] <= shift_register:inst1.data_out[25]
O[26] <= shift_register:inst1.data_out[26]
O[27] <= shift_register:inst1.data_out[27]
O[28] <= shift_register:inst1.data_out[28]
O[29] <= shift_register:inst1.data_out[29]
O[30] <= shift_register:inst1.data_out[30]
O[31] <= shift_register:inst1.data_out[31]
test[0] <= shift_registerv2:inst2.data_out[0]
test[1] <= shift_registerv2:inst2.data_out[1]
test[2] <= shift_registerv2:inst2.data_out[2]
test[3] <= shift_registerv2:inst2.data_out[3]
test[4] <= shift_registerv2:inst2.data_out[4]
test[5] <= shift_registerv2:inst2.data_out[5]
test[6] <= shift_registerv2:inst2.data_out[6]
test[7] <= shift_registerv2:inst2.data_out[7]


|next_five|new_all:inst
T <= uarter:inst2.T
CLK => fre:inst.clk
RESET => fre:inst.reset
RESET => uarter:inst2.reset
RESET => uarter_r:inst3.reset
T_com => uarter:inst2.T_com
T_buf[0] => uarter:inst2.T_buf[0]
T_buf[1] => uarter:inst2.T_buf[1]
T_buf[2] => uarter:inst2.T_buf[2]
T_buf[3] => uarter:inst2.T_buf[3]
T_buf[4] => uarter:inst2.T_buf[4]
T_buf[5] => uarter:inst2.T_buf[5]
T_buf[6] => uarter:inst2.T_buf[6]
T_buf[7] => uarter:inst2.T_buf[7]
T_done <= uarter:inst2.T_done
bclk <= fre:inst.bclk
R_ready <= uarter_r:inst3.R_ready
R => uarter_r:inst3.R
R_buf[0] <= uarter_r:inst3.R_buf[0]
R_buf[1] <= uarter_r:inst3.R_buf[1]
R_buf[2] <= uarter_r:inst3.R_buf[2]
R_buf[3] <= uarter_r:inst3.R_buf[3]
R_buf[4] <= uarter_r:inst3.R_buf[4]
R_buf[5] <= uarter_r:inst3.R_buf[5]
R_buf[6] <= uarter_r:inst3.R_buf[6]
R_buf[7] <= uarter_r:inst3.R_buf[7]


|next_five|new_all:inst|uarter:inst2
bclk => T_done~reg0.CLK
bclk => xbitcnt[0].CLK
bclk => xbitcnt[1].CLK
bclk => xbitcnt[2].CLK
bclk => xbitcnt[3].CLK
bclk => xbitcnt[4].CLK
bclk => xbitcnt[5].CLK
bclk => xbitcnt[6].CLK
bclk => xbitcnt[7].CLK
bclk => xbitcnt[8].CLK
bclk => xbitcnt[9].CLK
bclk => xbitcnt[10].CLK
bclk => xbitcnt[11].CLK
bclk => xbitcnt[12].CLK
bclk => xbitcnt[13].CLK
bclk => xbitcnt[14].CLK
bclk => xbitcnt[15].CLK
bclk => xbitcnt[16].CLK
bclk => xbitcnt[17].CLK
bclk => xbitcnt[18].CLK
bclk => xbitcnt[19].CLK
bclk => xbitcnt[20].CLK
bclk => xbitcnt[21].CLK
bclk => xbitcnt[22].CLK
bclk => xbitcnt[23].CLK
bclk => xbitcnt[24].CLK
bclk => xbitcnt[25].CLK
bclk => xbitcnt[26].CLK
bclk => xbitcnt[27].CLK
bclk => xbitcnt[28].CLK
bclk => xbitcnt[29].CLK
bclk => xbitcnt[30].CLK
bclk => xbitcnt[31].CLK
bclk => xcnt16[0].CLK
bclk => xcnt16[1].CLK
bclk => xcnt16[2].CLK
bclk => xcnt16[3].CLK
bclk => xcnt16[4].CLK
bclk => txds.CLK
bclk => state~1.DATAIN
reset => T_done~reg0.ACLR
reset => txds.PRESET
reset => state~3.DATAIN
reset => xcnt16[4].ENA
reset => xcnt16[3].ENA
reset => xcnt16[2].ENA
reset => xcnt16[1].ENA
reset => xcnt16[0].ENA
reset => xbitcnt[31].ENA
reset => xbitcnt[30].ENA
reset => xbitcnt[29].ENA
reset => xbitcnt[28].ENA
reset => xbitcnt[27].ENA
reset => xbitcnt[26].ENA
reset => xbitcnt[25].ENA
reset => xbitcnt[24].ENA
reset => xbitcnt[23].ENA
reset => xbitcnt[22].ENA
reset => xbitcnt[21].ENA
reset => xbitcnt[20].ENA
reset => xbitcnt[19].ENA
reset => xbitcnt[18].ENA
reset => xbitcnt[17].ENA
reset => xbitcnt[16].ENA
reset => xbitcnt[15].ENA
reset => xbitcnt[14].ENA
reset => xbitcnt[13].ENA
reset => xbitcnt[12].ENA
reset => xbitcnt[11].ENA
reset => xbitcnt[10].ENA
reset => xbitcnt[9].ENA
reset => xbitcnt[8].ENA
reset => xbitcnt[7].ENA
reset => xbitcnt[6].ENA
reset => xbitcnt[5].ENA
reset => xbitcnt[4].ENA
reset => xbitcnt[3].ENA
reset => xbitcnt[2].ENA
reset => xbitcnt[1].ENA
reset => xbitcnt[0].ENA
T_com => T_done.OUTPUTSELECT
T_com => state.DATAB
T_com => Selector1.IN3
T_com => xcnt16.OUTPUTSELECT
T_com => xcnt16.OUTPUTSELECT
T_com => xcnt16.OUTPUTSELECT
T_com => xcnt16.OUTPUTSELECT
T_com => xcnt16.OUTPUTSELECT
T_com => state.DATAB
T_com => Selector0.IN1
T_buf[0] => Mux0.IN7
T_buf[1] => Mux0.IN6
T_buf[2] => Mux0.IN5
T_buf[3] => Mux0.IN4
T_buf[4] => Mux0.IN3
T_buf[5] => Mux0.IN2
T_buf[6] => Mux0.IN1
T_buf[7] => Mux0.IN0
T <= txds.DB_MAX_OUTPUT_PORT_TYPE
T_done <= T_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|next_five|new_all:inst|fre:inst
clk => bclk~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => cnt[24].CLK
clk => cnt[25].CLK
clk => cnt[26].CLK
clk => cnt[27].CLK
clk => cnt[28].CLK
clk => cnt[29].CLK
clk => cnt[30].CLK
clk => cnt[31].CLK
reset => bclk~reg0.ACLR
reset => cnt[0].ACLR
reset => cnt[1].ACLR
reset => cnt[2].ACLR
reset => cnt[3].ACLR
reset => cnt[4].ACLR
reset => cnt[5].ACLR
reset => cnt[6].ACLR
reset => cnt[7].ACLR
reset => cnt[8].ACLR
reset => cnt[9].ACLR
reset => cnt[10].ACLR
reset => cnt[11].ACLR
reset => cnt[12].ACLR
reset => cnt[13].ACLR
reset => cnt[14].ACLR
reset => cnt[15].ACLR
reset => cnt[16].ACLR
reset => cnt[17].ACLR
reset => cnt[18].ACLR
reset => cnt[19].ACLR
reset => cnt[20].ACLR
reset => cnt[21].ACLR
reset => cnt[22].ACLR
reset => cnt[23].ACLR
reset => cnt[24].ACLR
reset => cnt[25].ACLR
reset => cnt[26].ACLR
reset => cnt[27].ACLR
reset => cnt[28].ACLR
reset => cnt[29].ACLR
reset => cnt[30].ACLR
reset => cnt[31].ACLR
bclk <= bclk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|next_five|new_all:inst|uarter_r:inst3
bclk => R_buf[0]~reg0.CLK
bclk => R_buf[1]~reg0.CLK
bclk => R_buf[2]~reg0.CLK
bclk => R_buf[3]~reg0.CLK
bclk => R_buf[4]~reg0.CLK
bclk => R_buf[5]~reg0.CLK
bclk => R_buf[6]~reg0.CLK
bclk => R_buf[7]~reg0.CLK
bclk => R_ready~reg0.CLK
bclk => \PRO2:R_bufs[0].CLK
bclk => \PRO2:R_bufs[1].CLK
bclk => \PRO2:R_bufs[2].CLK
bclk => \PRO2:R_bufs[3].CLK
bclk => \PRO2:R_bufs[4].CLK
bclk => \PRO2:R_bufs[5].CLK
bclk => \PRO2:R_bufs[6].CLK
bclk => \PRO2:R_bufs[7].CLK
bclk => \PRO2:xbitcnt[0].CLK
bclk => \PRO2:xbitcnt[1].CLK
bclk => \PRO2:xbitcnt[2].CLK
bclk => \PRO2:xbitcnt[3].CLK
bclk => \PRO2:xbitcnt[4].CLK
bclk => \PRO2:xbitcnt[5].CLK
bclk => \PRO2:xbitcnt[6].CLK
bclk => \PRO2:xbitcnt[7].CLK
bclk => \PRO2:xbitcnt[8].CLK
bclk => \PRO2:xbitcnt[9].CLK
bclk => \PRO2:xbitcnt[10].CLK
bclk => \PRO2:xbitcnt[11].CLK
bclk => \PRO2:xbitcnt[12].CLK
bclk => \PRO2:xbitcnt[13].CLK
bclk => \PRO2:xbitcnt[14].CLK
bclk => \PRO2:xbitcnt[15].CLK
bclk => \PRO2:xbitcnt[16].CLK
bclk => \PRO2:xbitcnt[17].CLK
bclk => \PRO2:xbitcnt[18].CLK
bclk => \PRO2:xbitcnt[19].CLK
bclk => \PRO2:xbitcnt[20].CLK
bclk => \PRO2:xbitcnt[21].CLK
bclk => \PRO2:xbitcnt[22].CLK
bclk => \PRO2:xbitcnt[23].CLK
bclk => \PRO2:xbitcnt[24].CLK
bclk => \PRO2:xbitcnt[25].CLK
bclk => \PRO2:xbitcnt[26].CLK
bclk => \PRO2:xbitcnt[27].CLK
bclk => \PRO2:xbitcnt[28].CLK
bclk => \PRO2:xbitcnt[29].CLK
bclk => \PRO2:xbitcnt[30].CLK
bclk => \PRO2:xbitcnt[31].CLK
bclk => \PRO2:xcnt16[0].CLK
bclk => \PRO2:xcnt16[1].CLK
bclk => \PRO2:xcnt16[2].CLK
bclk => \PRO2:xcnt16[3].CLK
bclk => state~5.DATAIN
reset => \PRO2:xcnt16[0].ACLR
reset => \PRO2:xcnt16[1].ACLR
reset => \PRO2:xcnt16[2].ACLR
reset => \PRO2:xcnt16[3].ACLR
reset => state~7.DATAIN
reset => R_buf[0]~reg0.ENA
reset => \PRO2:xbitcnt[31].ENA
reset => \PRO2:xbitcnt[30].ENA
reset => \PRO2:xbitcnt[29].ENA
reset => \PRO2:xbitcnt[28].ENA
reset => \PRO2:xbitcnt[27].ENA
reset => \PRO2:xbitcnt[26].ENA
reset => \PRO2:xbitcnt[25].ENA
reset => \PRO2:xbitcnt[24].ENA
reset => \PRO2:xbitcnt[23].ENA
reset => \PRO2:xbitcnt[22].ENA
reset => \PRO2:xbitcnt[21].ENA
reset => \PRO2:xbitcnt[20].ENA
reset => \PRO2:xbitcnt[19].ENA
reset => \PRO2:xbitcnt[18].ENA
reset => \PRO2:xbitcnt[17].ENA
reset => \PRO2:xbitcnt[16].ENA
reset => \PRO2:xbitcnt[15].ENA
reset => \PRO2:xbitcnt[14].ENA
reset => \PRO2:xbitcnt[13].ENA
reset => \PRO2:xbitcnt[12].ENA
reset => \PRO2:xbitcnt[11].ENA
reset => \PRO2:xbitcnt[10].ENA
reset => \PRO2:xbitcnt[9].ENA
reset => \PRO2:xbitcnt[8].ENA
reset => \PRO2:xbitcnt[7].ENA
reset => \PRO2:xbitcnt[6].ENA
reset => \PRO2:xbitcnt[5].ENA
reset => \PRO2:xbitcnt[4].ENA
reset => \PRO2:xbitcnt[3].ENA
reset => \PRO2:xbitcnt[2].ENA
reset => \PRO2:xbitcnt[1].ENA
reset => \PRO2:xbitcnt[0].ENA
reset => \PRO2:R_bufs[7].ENA
reset => \PRO2:R_bufs[6].ENA
reset => \PRO2:R_bufs[5].ENA
reset => \PRO2:R_bufs[4].ENA
reset => \PRO2:R_bufs[3].ENA
reset => \PRO2:R_bufs[2].ENA
reset => \PRO2:R_bufs[1].ENA
reset => \PRO2:R_bufs[0].ENA
reset => R_ready~reg0.ENA
reset => R_buf[7]~reg0.ENA
reset => R_buf[6]~reg0.ENA
reset => R_buf[5]~reg0.ENA
reset => R_buf[4]~reg0.ENA
reset => R_buf[3]~reg0.ENA
reset => R_buf[2]~reg0.ENA
reset => R_buf[1]~reg0.ENA
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => xbitcnt.OUTPUTSELECT
R => Selector1.IN3
R => state.OUTPUTSELECT
R => state.OUTPUTSELECT
R => xcnt16.OUTPUTSELECT
R => xcnt16.OUTPUTSELECT
R => xcnt16.OUTPUTSELECT
R => xcnt16.OUTPUTSELECT
R => R_bufs.DATAB
R => R_bufs.DATAB
R => R_bufs.DATAB
R => R_bufs.DATAB
R => R_bufs.DATAB
R => R_bufs.DATAB
R => R_bufs.DATAB
R => R_bufs.DATAB
R => Selector0.IN5
R_buf[0] <= R_buf[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[1] <= R_buf[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[2] <= R_buf[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[3] <= R_buf[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[4] <= R_buf[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[5] <= R_buf[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[6] <= R_buf[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_buf[7] <= R_buf[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ready <= R_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|next_five|shift_registerv2:inst2
clk => current_state~1.DATAIN
en => Selector37.IN2
en => Selector38.IN2
en => Selector39.IN3
reset => done_test.DATAIN
reset => current_state~3.DATAIN
data_in[0] => Selector32.IN0
data_in[1] => Selector31.IN0
data_in[2] => Selector30.IN0
data_in[3] => Selector29.IN0
data_in[4] => Selector28.IN0
data_in[5] => Selector27.IN0
data_in[6] => Selector26.IN0
data_in[7] => Selector25.IN0
data_in[8] => Selector24.IN0
data_in[9] => Selector23.IN0
data_in[10] => Selector22.IN0
data_in[11] => Selector21.IN0
data_in[12] => Selector20.IN0
data_in[13] => Selector19.IN0
data_in[14] => Selector18.IN0
data_in[15] => Selector17.IN0
data_in[16] => Selector16.IN0
data_in[17] => Selector15.IN0
data_in[18] => Selector14.IN0
data_in[19] => Selector13.IN0
data_in[20] => Selector12.IN0
data_in[21] => Selector11.IN0
data_in[22] => Selector10.IN0
data_in[23] => Selector9.IN0
data_in[24] => Selector8.IN0
data_in[25] => Selector7.IN0
data_in[26] => Selector6.IN0
data_in[27] => Selector5.IN0
data_in[28] => Selector4.IN0
data_in[29] => Selector3.IN0
data_in[30] => Selector2.IN0
data_in[31] => Selector1.IN0
has_done => Selector37.IN3
has_done => Selector38.IN3
data_out[0] <= data_out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
done_test <= reset.DB_MAX_OUTPUT_PORT_TYPE
done <= done$latch.DB_MAX_OUTPUT_PORT_TYPE


|next_five|shift_register:inst1
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => data[24].CLK
clk => data[25].CLK
clk => data[26].CLK
clk => data[27].CLK
clk => data[28].CLK
clk => data[29].CLK
clk => data[30].CLK
clk => data[31].CLK
clk => data[32].CLK
clk => data[33].CLK
clk => data[34].CLK
clk => data[35].CLK
clk => data[36].CLK
clk => data[37].CLK
clk => data[38].CLK
clk => data[39].CLK
data_in[0] => data[0].DATAIN
data_in[1] => data[1].DATAIN
data_in[2] => data[2].DATAIN
data_in[3] => data[3].DATAIN
data_in[4] => data[4].DATAIN
data_in[5] => data[5].DATAIN
data_in[6] => data[6].DATAIN
data_in[7] => data[7].DATAIN
data_out[0] <= data[8].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data[9].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data[10].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data[11].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data[12].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data[13].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data[14].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data[15].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data[16].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data[17].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data[18].DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data[19].DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data[20].DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data[21].DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data[22].DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data[23].DB_MAX_OUTPUT_PORT_TYPE
data_out[16] <= data[24].DB_MAX_OUTPUT_PORT_TYPE
data_out[17] <= data[25].DB_MAX_OUTPUT_PORT_TYPE
data_out[18] <= data[26].DB_MAX_OUTPUT_PORT_TYPE
data_out[19] <= data[27].DB_MAX_OUTPUT_PORT_TYPE
data_out[20] <= data[28].DB_MAX_OUTPUT_PORT_TYPE
data_out[21] <= data[29].DB_MAX_OUTPUT_PORT_TYPE
data_out[22] <= data[30].DB_MAX_OUTPUT_PORT_TYPE
data_out[23] <= data[31].DB_MAX_OUTPUT_PORT_TYPE
data_out[24] <= data[32].DB_MAX_OUTPUT_PORT_TYPE
data_out[25] <= data[33].DB_MAX_OUTPUT_PORT_TYPE
data_out[26] <= data[34].DB_MAX_OUTPUT_PORT_TYPE
data_out[27] <= data[35].DB_MAX_OUTPUT_PORT_TYPE
data_out[28] <= data[36].DB_MAX_OUTPUT_PORT_TYPE
data_out[29] <= data[37].DB_MAX_OUTPUT_PORT_TYPE
data_out[30] <= data[38].DB_MAX_OUTPUT_PORT_TYPE
data_out[31] <= data[39].DB_MAX_OUTPUT_PORT_TYPE
done <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


